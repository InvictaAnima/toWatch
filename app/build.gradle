apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ferumate.towatch"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //jetbrains
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:${versions.kotlin}"

    //support
    api "com.android.support:appcompat-v7:${versions.buildTools}"
    api "com.android.support:recyclerview-v7:${versions.buildTools}"
    api "com.android.support:cardview-v7:${versions.buildTools}"
    api "com.android.support:support-v4:${versions.buildTools}"
    api "com.android.support:design:${versions.buildTools}"
    api "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"

    //android
    api "android.arch.lifecycle:extensions:${versions.archComp}"
    api "android.arch.lifecycle:common-java8:${versions.archComp}"
    api "android.arch.persistence.room:runtime:${versions.room}"
    kapt "android.arch.persistence.room:compiler:${versions.room}"
    api "android.arch.persistence.room:rxjava2:${versions.room}"

    //google
    api "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.github.bumptech.glide:glide:${versions.glide}"
    api "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    //reactivex
    api "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"

    //square
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    api "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${versions.retrofitRxAdapter}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    //unit tests
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "com.nhaarman:mockito-kotlin:${versions.mockitoKotlin}"
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
    testImplementation "android.arch.core:core-testing:${versions.livedataTesting}"
    testImplementation "android.arch.persistence.room:testing:${versions.roomTesting}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"

    androidTestImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.nhaarman:mockito-kotlin:${versions.mockitoKotlin}"
    androidTestImplementation "com.android.support.test:runner:${versions.atsl}"
    androidTestImplementation "com.android.support.test:rules:${versions.atsl}"
    androidTestImplementation "android.arch.core:core-testing:${versions.livedataTesting}"
    androidTestImplementation "android.arch.persistence.room:testing:${versions.roomTesting}"
}
